plugins {
    id 'java'
    id 'application'
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'org.owasp.dependencycheck' version '4.0.2'
}

mainClassName = 'net.reini.tcow.TcowReport'

repositories {
    jcenter()
//    mavenLocal()
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': 'net.reini.tcow.Billing'
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'com.itextpdf:kernel:7.1.5'
    compile 'com.itextpdf:forms:7.1.5'
//    compile 'com.itextpdf:itextpdf:7.1.5'
    compile 'org.jopendocument:jOpenDocument:1.3'
    compile 'com.sun.mail:javax.mail:1.6.2'
    compile 'com.lowagie:itext:2.1.7'
//    compile 'com.lowagie:itext:4.2.0'
//    compile 'com.lowagie:itextpdf:4.2.0'

    compile 'net.sf.jasperreports:jasperreports:6.8.0'
    compile 'net.sf.jasperreports:jasperreports-functions:6.8.0'
//    compile 'net.sf.jasperreports:jasperreports-metadata:6.8.0'
    
    runtime 'ch.qos.logback:logback-classic:1.2.3'
    runtime 'ch.qos.logback:logback-core:1.2.3'
    
    testCompile 'junit:junit:4.12'
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

check.dependsOn dependencyCheckUpdate, dependencyCheckAnalyze
